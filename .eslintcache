[{"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/priceChart.js":"1","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/configs/chartConfig.js":"2","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/addCoinButton.js":"3","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/helpers/sorting.js":"4","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/coinData.js":"5","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/coinList.js":"6","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/containers/coinSummary.js":"7","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/App.js":"8","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/coin.js":"9","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/compareCoins.js":"10","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/header.js":"11"},{"size":3023,"mtime":1606682149494,"results":"12","hashOfConfig":"13"},{"size":379,"mtime":1606644159280,"results":"14","hashOfConfig":"13"},{"size":1277,"mtime":1606685140047,"results":"15","hashOfConfig":"13"},{"size":825,"mtime":1606681416478,"results":"16","hashOfConfig":"13"},{"size":1983,"mtime":1606673435221,"results":"17","hashOfConfig":"13"},{"size":1689,"mtime":1606683071374,"results":"18","hashOfConfig":"13"},{"size":696,"mtime":1606685089015,"results":"19","hashOfConfig":"13"},{"size":933,"mtime":1606683332587,"results":"20","hashOfConfig":"13"},{"size":1142,"mtime":1606601835867,"results":"21","hashOfConfig":"13"},{"size":2806,"mtime":1606687446835,"results":"22","hashOfConfig":"13"},{"size":295,"mtime":1606595269965,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"mngrue",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/priceChart.js",["49"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Chartjs from 'chart.js';\r\nimport { chartOptions } from '../configs/chartConfig';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PriceChart = ({data}) => {\r\n\r\n    const {day, week, year, detail} = data;\r\n    const [timeFormat, setTimeFormat] = useState(\"24h\");\r\n\r\n    const determineTimeFormat = () => {\r\n      switch (timeFormat) {\r\n        case \"24h\":\r\n          return day;\r\n        case \"7d\":\r\n          return week;\r\n        case \"1y\":\r\n          return year;\r\n        default:\r\n          return day;\r\n      }\r\n    };\r\n\r\n    const chartRef = useRef();\r\n\r\n    useEffect(() => {\r\n      if (chartRef && chartRef.current && detail) {\r\n\r\n        const chart = new Chartjs(chartRef.current, {\r\n          type: 'line',\r\n          data: {\r\n              datasets: [{\r\n                  label: `${detail.name} price`,\r\n                  data: determineTimeFormat(),\r\n                  backgroundColor: `${detail.price_change_24h < 0 ? 'rgba(242, 38, 19, 0.7)' : 'rgba(30, 130, 76, 0.7)'}`,\r\n                  pointRadius: 0,\r\n                  borderWidth: 1\r\n              }],\r\n          },\r\n          options: {\r\n            ...chartOptions\r\n          }\r\n      })\r\n      }\r\n    });\r\n\r\n    const renderPrice = () => {\r\n      if (detail) {\r\n        return (\r\n          <div className=\"chart-header\">\r\n            <div>\r\n            <p className=\"my-0\"><img src={detail.image} style={{width: \"30px\", height: \"30px\"}} alt=\"\"/></p>\r\n            <p className=\"my-0\"><strong>${detail.current_price.toFixed(2)}</strong></p>\r\n            <p\r\n              className={\r\n                detail.price_change_24h < 0\r\n                  ? \"text-danger my-0\"\r\n                  : \"text-success my-0\"\r\n              }\r\n            >\r\n              {detail.price_change_percentage_24h.toFixed(2)}%\r\n            </p>\r\n            </div>\r\n            <div className=\"chart-button mt-1\">\r\n          <Link\r\n            to=\"/\"\r\n            className=\"btn btn-outline-secondary btn-sm\"\r\n          >\r\n            ‚Üê Back\r\n          </Link>\r\n        </div>\r\n        </div>\r\n        );\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"bg-white border rounded p-3 chartDiv\">\r\n        <div>{renderPrice()}</div>\r\n        <div>\r\n          <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\r\n        </div>\r\n        <div className=\"chart-button mt-1\">\r\n          <button\r\n            onClick={() => setTimeFormat(\"24h\")}\r\n            className=\"btn btn-outline-secondary btn-sm\"\r\n          >\r\n            24h\r\n          </button>\r\n          <button\r\n            onClick={() => setTimeFormat(\"7d\")}\r\n            className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n          >\r\n            7d\r\n          </button>\r\n          <button\r\n            onClick={() => setTimeFormat(\"1y\")}\r\n            className=\"btn btn-outline-secondary btn-sm\"\r\n          >\r\n            1y\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n \r\nexport default PriceChart;",["50","51"],"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/configs/chartConfig.js",[],"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/addCoinButton.js",["52"],"import React, { useContext, useState } from 'react';\r\nimport { CoinStorageContext } from '../context/coinStorage.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddCoinButton = ({coins}) => {\r\n    const [isActive, setIsActive] = useState(false);\r\n    const { addCoin } = useContext(CoinStorageContext);\r\n\r\n    const handleClick = (coin) => {\r\n        addCoin(coin);\r\n        setIsActive(false);\r\n    };\r\n\r\n    return ( \r\n        <div className=\"coin-list-buttons\">\r\n        <div className=\"dropdown\">\r\n        <button onClick={() => setIsActive(!isActive)} className=\"btn btn-primary dropdown-toggle add-coin\" type=\"button\">\r\n          Add Coin\r\n        </button>\r\n        <div className={isActive ? \"dropdown-menu show\" : \"dropdown-menu\"}>\r\n          {coins.map((el) => {\r\n            return (\r\n              <a onClick={() => handleClick(el)} href=\"#\" className=\"dropdown-item\">{el}</a>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"chart-button mt-1\">\r\n            <Link\r\n              to=\"/coins/compare\"\r\n              className=\"btn btn-outline-secondary btn-sm\"\r\n            >\r\n              Compare\r\n            </Link>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n}\r\n \r\nexport default AddCoinButton;","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/helpers/sorting.js",[],"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/coinData.js",[],"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/coinList.js",[],"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/containers/coinSummary.js",[],"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/App.js",["53"],"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/coin.js",[],"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/compareCoins.js",["54","55"],"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/header.js",[],{"ruleId":"56","severity":1,"message":"57","line":29,"column":15,"nodeType":"58","messageId":"59","endLine":29,"endColumn":20},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":23,"column":15,"nodeType":"66","endLine":23,"endColumn":85},{"ruleId":"56","severity":1,"message":"67","line":2,"column":34,"nodeType":"58","messageId":"59","endLine":2,"endColumn":40},{"ruleId":"56","severity":1,"message":"68","line":8,"column":12,"nodeType":"58","messageId":"59","endLine":8,"endColumn":21},{"ruleId":"56","severity":1,"message":"57","line":31,"column":19,"nodeType":"58","messageId":"59","endLine":31,"endColumn":24},"no-unused-vars","'chart' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Switch' is defined but never used.","'isLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]