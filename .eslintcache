[{"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/compareCoins.js":"1","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/helpers/sorting.js":"2","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/configs/chartConfig.js":"3"},{"size":2881,"mtime":1606745877852,"results":"4","hashOfConfig":"5"},{"size":825,"mtime":1606745334838,"results":"6","hashOfConfig":"5"},{"size":638,"mtime":1606745856378,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"mngrue",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/components/compareCoins.js",["15","16"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Chartjs from 'chart.js';\r\nimport { compareChartOptions } from '../configs/chartConfig';\r\nimport coinGecko from '../apis/coinGecko.js';\r\nimport {mergeSortPrices} from '../helpers/sorting.js';\r\n\r\nconst CompareCoins = () => {\r\n    const chartRef = useRef();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [coinsToCompare, setCoinsToCompare] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            const response = await coinGecko.get('/coins/markets', {\r\n                params: {\r\n                    vs_currency: 'usd',\r\n                    ids: \"\"\r\n                }\r\n            });\r\n            setCoinsToCompare(response.data);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        if (!coinsToCompare) {\r\n          fetchData();\r\n        }\r\n        \r\n        if (coinsToCompare) {\r\n            const sortedByPrice = mergeSortPrices(coinsToCompare.slice(0,5)).map(obj => obj.current_price)\r\n            console.log(sortedByPrice)\r\n            const chart = new Chartjs(chartRef.current, {\r\n                type: 'bar',\r\n                data: {\r\n                  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple'],\r\n                    datasets: [{\r\n                        label: `Current price`,\r\n                        data: sortedByPrice, \r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)'\r\n                        ]\r\n                    }],\r\n                },\r\n                options: {\r\n                  ...compareChartOptions\r\n                }\r\n            })  \r\n        }\r\n            \r\n\r\n        \r\n\r\n      }, [coinsToCompare]);\r\n\r\n      return (\r\n        <div className=\"bg-white border rounded p-3 chartDiv\">\r\n          <div>\r\n            <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\r\n          </div>\r\n          <div className=\"chart-button mt-1\">\r\n            <button\r\n              onClick={() => (\"24h\")}\r\n              className=\"btn btn-outline-secondary btn-sm\"\r\n            >\r\n              Current price\r\n            </button>\r\n            <button\r\n              onClick={() => (\"7d\")}\r\n              className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n            >\r\n              24H Volume\r\n            </button>\r\n            <button\r\n              onClick={() => (\"1y\")}\r\n              className=\"btn btn-outline-secondary btn-sm\"\r\n            >\r\n              Market capitalization\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default CompareCoins;","/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/helpers/sorting.js",[],"/mnt/c/Users/ptama/dev/flatiron/labs/cryptotracks/src/configs/chartConfig.js",[],{"ruleId":"17","severity":1,"message":"18","line":9,"column":12,"nodeType":"19","messageId":"20","endLine":9,"endColumn":21},{"ruleId":"17","severity":1,"message":"21","line":32,"column":19,"nodeType":"19","messageId":"20","endLine":32,"endColumn":24},"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'chart' is assigned a value but never used."]