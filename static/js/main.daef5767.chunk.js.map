{"version":3,"sources":["configs/chartConfig.js","components/priceChart.js","components/coinData.js","apis/coinGecko.js","containers/coinDetails.js","context/coinStorage.js","components/addCoinButton.js","components/coin.js","components/coinList.js","containers/coinSummary.js","components/header.js","helpers/sorting.js","components/compareCoins.js","helpers/updateCompareCanvas.js","App.js","index.js"],"names":["chartOptions","lineHeightAnnotation","always","hover","lineWeight","animation","duration","maintainAspectRatio","responsive","scales","xAxes","type","distribution","compareChartOptions","PriceChart","data","day","week","year","detail","useState","timeFormat","setTimeFormat","determineTimeFormat","chartRef","useRef","useEffect","current","Chartjs","datasets","label","name","backgroundColor","price_change_24h","pointRadius","borderWidth","options","className","src","image","style","width","height","alt","current_price","toFixed","price_change_percentage_24h","to","renderPrice","ref","id","onClick","CoinData","market_cap","circulating_supply","market_cap_rank","high_24h","total_volume","low_24h","renderData","axios","create","baseURL","CoinDetails","useParams","coinData","setCoinData","isLoading","setIsLoading","format","map","el","t","y","a","Promise","all","coinGecko","get","params","vs_currency","days","ids","prices","fetchData","CoinStorageContext","createContext","CoinStorageContextProvider","props","localStorage","getItem","split","coinStorage","setCoinStorage","setItem","Provider","value","deleteCoin","coin","filter","addCoin","indexOf","children","AddCoinButton","coins","isActive","setIsActive","useContext","href","Coin","e","preventDefault","CoinList","setCoins","join","response","length","CoinSummary","Header","mergeSortPrices","arr","console","log","mergeSort","midPoint","firstHalf","slice","secondHalf","arr1","arr2","sorted","push","shift","concat","merge","insertionSortMarketCap","newMax","maxAndRemove","max","maxIndex","i","splice","bubbleSort24HourHigh","x","swap","i1","i2","temp","selectionSort24HourVolume","lowest","CompareCoins","coinsToCompare","setCoinsToCompare","sortCondition","setSortCondition","sortSize","setSortSize","currentChart","setCurrentChart","condition","reverse","decideSort","chart","labels","c","toUpperCase","replace","handleSortClick","destroy","target","handleSizeClick","parseInt","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.daef5767.chunk.js","sourcesContent":["export const chartOptions = {\r\n    lineHeightAnnotation: {\r\n      always: true,\r\n      hover: false,\r\n      lineWeight: 1.5,\r\n    },\r\n  \r\n    animation: {\r\n      duration: 2000,\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          distribution: \"linear\",\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  export const compareChartOptions = {\r\n    lineHeightAnnotation: {\r\n      always: true,\r\n      hover: false,\r\n      lineWeight: 1.5,\r\n    },\r\n    animation: {\r\n      duration: 2000,\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true\r\n  };","import React, { useEffect, useRef, useState } from 'react';\r\nimport Chartjs from 'chart.js';\r\nimport { chartOptions } from '../configs/chartConfig';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PriceChart = ({data}) => {\r\n\r\n    const {day, week, year, detail} = data;\r\n    const [timeFormat, setTimeFormat] = useState(\"24h\");\r\n\r\n    const determineTimeFormat = () => {\r\n      switch (timeFormat) {\r\n        case \"24h\":\r\n          return day;\r\n        case \"7d\":\r\n          return week;\r\n        case \"1y\":\r\n          return year;\r\n        default:\r\n          return day;\r\n      }\r\n    };\r\n\r\n    const chartRef = useRef();\r\n\r\n    useEffect(() => {\r\n      if (chartRef && chartRef.current && detail) {\r\n\r\n        const chart = new Chartjs(chartRef.current, {\r\n          type: 'line',\r\n          data: {\r\n              datasets: [{\r\n                  label: `${detail.name} price`,\r\n                  data: determineTimeFormat(),\r\n                  backgroundColor: `${detail.price_change_24h < 0 ? 'rgba(242, 38, 19, 0.7)' : 'rgba(30, 130, 76, 0.7)'}`,\r\n                  pointRadius: 0,\r\n                  borderWidth: 1\r\n              }],\r\n          },\r\n          options: {\r\n            ...chartOptions\r\n          }\r\n      })\r\n      }\r\n    });\r\n\r\n    const renderPrice = () => {\r\n      if (detail) {\r\n        return (\r\n          <div className=\"chart-header\">\r\n            <div>\r\n            <p className=\"my-0\"><img src={detail.image} style={{width: \"30px\", height: \"30px\"}} alt=\"\"/></p>\r\n            <p className=\"my-0\"><strong>${detail.current_price.toFixed(2)}</strong></p>\r\n            <p\r\n              className={\r\n                detail.price_change_24h < 0\r\n                  ? \"text-danger my-0\"\r\n                  : \"text-success my-0\"\r\n              }\r\n            >\r\n              {detail.price_change_percentage_24h.toFixed(2)}%\r\n            </p>\r\n            </div>\r\n            <div className=\"chart-button mt-1\">\r\n          <Link\r\n            to=\"/\"\r\n            className=\"btn btn-outline-secondary btn-sm\"\r\n          >\r\n            ← Back\r\n          </Link>\r\n        </div>\r\n        </div>\r\n        );\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"bg-white border rounded p-3 chartDiv\">\r\n        <div>{renderPrice()}</div>\r\n        <div>\r\n          <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\r\n        </div>\r\n        <div className=\"chart-button mt-1\">\r\n          <button\r\n            onClick={() => setTimeFormat(\"24h\")}\r\n            className=\"btn btn-outline-secondary btn-sm\"\r\n          >\r\n            24h\r\n          </button>\r\n          <button\r\n            onClick={() => setTimeFormat(\"7d\")}\r\n            className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n          >\r\n            7d\r\n          </button>\r\n          <button\r\n            onClick={() => setTimeFormat(\"1y\")}\r\n            className=\"btn btn-outline-secondary btn-sm\"\r\n          >\r\n            1y\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n \r\nexport default PriceChart;","import React from 'react';\r\n\r\nconst CoinData = ({data}) => {\r\n    \r\n    const renderData = () => {\r\n      if (data) {\r\n        return (\r\n          <div className=\"bg-white mt-3 p-2 rounded border row coin-data-div\">\r\n\r\n            <div className=\"col-sm\">\r\n\r\n              <div className=\"d-flex flex-column\">\r\n                <span className=\"text-muted coin-data-category\">Market capitalization</span>\r\n                <span>{data.market_cap}</span>\r\n              </div>\r\n\r\n              <hr />\r\n\r\n              <div className=\"d-flex flex-column\">\r\n                <span className=\"text-muted coin-data-category\">\r\n                  Circulating supply\r\n                </span>\r\n                <span>{data.circulating_supply}</span>\r\n              </div>\r\n\r\n            </div>\r\n  \r\n            <div className=\"col-sm\">\r\n\r\n              <div className=\"d-flex flex-column\">\r\n                <span className=\"text-muted coin-data-category\">Market cap ranking</span>\r\n                <span>{data.market_cap_rank}</span>\r\n              </div>\r\n\r\n              <hr />\r\n\r\n              <div className=\"d-flex flex-column\">\r\n                <span className=\"text-muted coin-data-category\">High (24H)</span>\r\n                <span>{data.high_24h}</span>\r\n              </div>\r\n\r\n            </div>\r\n  \r\n            <div className=\"col-sm\">\r\n\r\n              <div className=\"d-flex flex-column\">\r\n                <span className=\"text-muted coin-data-category\">\r\n                  Total volume (24H)\r\n                </span>\r\n                <span>{data.total_volume}</span>\r\n              </div>\r\n\r\n              <hr />\r\n\r\n              <div className=\"d-flex flex-column\">\r\n                <span className=\"text-muted coin-data-category\">Low (24H)</span>\r\n                <span>{data.low_24h}</span>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n          );\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            {renderData()}\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default CoinData;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.coingecko.com/api/v3'\r\n})","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PriceChart from '../components/priceChart.js';\r\nimport CoinData from '../components/coinData.js';\r\nimport coinGecko from '../apis/coinGecko.js';\r\n\r\nconst CoinDetails = () => {\r\n    const { id } = useParams();\r\n    const [coinData, setCoinData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState([]);\r\n\r\n    const format = data => {\r\n        return data.map(el => {\r\n            return {\r\n                t: el[0],\r\n                y: el[1].toFixed(2)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n\r\n            setIsLoading(true);\r\n\r\n            const [day, week, year, detail] = await Promise.all([\r\n                coinGecko.get(`/coins/${id}/market_chart`, {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    days: '1'\r\n                }\r\n            }), coinGecko.get(`/coins/${id}/market_chart`, {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    days: '7'\r\n                }\r\n            }), coinGecko.get(`/coins/${id}/market_chart`, {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    days: '365'\r\n                }\r\n            }), coinGecko.get(`/coins/markets`, {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    ids: id\r\n                }\r\n            })]);\r\n       \r\n            setCoinData({\r\n                day: format(day.data.prices),\r\n                week: format(week.data.prices),\r\n                year: format(year.data.prices),\r\n                detail: detail.data[0]\r\n            });\r\n            setIsLoading(false)\r\n            \r\n        }\r\n        \r\n        fetchData();\r\n\r\n    }, [])\r\n\r\n    const coinRender = () => {\r\n        if (isLoading) {\r\n            return <div><i className=\"fas fa-coins\"></i> Your coin is loading...</div>\r\n        }\r\n        return(\r\n            <div className=\"coinlist\">\r\n                <PriceChart data={coinData}/>\r\n                <CoinData data={coinData.detail}/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return coinRender();\r\n}\r\n\r\nexport default CoinDetails;","import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const CoinStorageContext = createContext();\r\n\r\nexport const CoinStorageContextProvider = props => {\r\n    const [coinStorage, setCoinStorage] = useState(localStorage.getItem(\"coinStorage\").split(\",\")  || ['bitcoin', 'ethereum', 'ripple', 'litecoin']);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"coinStorage\", coinStorage);\r\n    }, [coinStorage]);\r\n\r\n    const deleteCoin = (coin) => {\r\n        setCoinStorage(coinStorage.filter(el => {return el !== coin}));\r\n    }\r\n\r\n    const addCoin = (coin) => {\r\n        if (coinStorage.indexOf(coin) === -1) {\r\n            setCoinStorage([...coinStorage, coin]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CoinStorageContext.Provider value={{coinStorage, deleteCoin, addCoin}}>\r\n            {props.children}\r\n        </CoinStorageContext.Provider>\r\n    );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { CoinStorageContext } from '../context/coinStorage.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddCoinButton = ({coins}) => {\r\n    const [isActive, setIsActive] = useState(false);\r\n    const { addCoin } = useContext(CoinStorageContext);\r\n\r\n    const handleClick = (coin) => {\r\n        addCoin(coin);\r\n        setIsActive(false);\r\n    };\r\n\r\n    return ( \r\n        <div className=\"coin-list-buttons\">\r\n        <div className=\"dropdown\">\r\n        <button onClick={() => setIsActive(!isActive)} className=\"btn btn-primary dropdown-toggle add-coin\" type=\"button\">\r\n          Add Coin\r\n        </button>\r\n        <div className={isActive ? \"dropdown-menu show\" : \"dropdown-menu\"}>\r\n          {coins.map((el) => {\r\n            return (\r\n              <a key={el} onClick={() => handleClick(el)} href=\"#\" className=\"dropdown-item\">{el}</a>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"chart-button mt-1\">\r\n            <Link\r\n              to=\"/coins/compare\"\r\n              className=\"btn btn-outline-secondary btn-sm\"\r\n            >\r\n              Compare\r\n            </Link>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n}\r\n \r\nexport default AddCoinButton;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Coin = ({coin, deleteCoin}) => {\r\n    return (\r\n        <Link to={`/coins/${coin.id}`} className=\"text-decoration-none my-1 coin\">\r\n            <li className=\"coinlist-item list-group-item list-group-item-action d-flex justify-content-between align-items-center text-dark\">\r\n\r\n                <img className=\"coinlist-image\" src={coin.image} alt=\"\" />\r\n\r\n                <span className=\"text-decoration-none\">{coin.current_price}</span>\r\n\r\n                <span className={coin.price_change_percentage_24h < 0 ? \"text-danger mr-2\" : \"text-success mr-2\"}>\r\n                    <i className={`fas fa-sort-${coin.price_change_percentage_24h < 0 ? \"down\" : \"up\"} align-middle mr-1`}></i>\r\n                    {coin.price_change_percentage_24h}\r\n                </span>\r\n\r\n                <i onClick={(e) => {\r\n                    e.preventDefault();\r\n                    deleteCoin(coin.id);\r\n                }} className=\"delete-icon far fa-times-circle text-danger\">   \r\n                </i>\r\n            </li>\r\n        </Link>\r\n      );\r\n}\r\n \r\nexport default Coin;","import React, { useEffect, useState, useContext } from 'react';\r\nimport coinGecko from '../apis/coinGecko.js';\r\nimport { CoinStorageContext } from '../context/coinStorage.js';\r\nimport Coin from './coin.js';\r\n\r\nconst CoinList = () => {\r\n\r\n    const [coins, setCoins] = useState([]);\r\n    const { coinStorage, deleteCoin } = useContext(CoinStorageContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            const response = await coinGecko.get('/coins/markets', {\r\n                params: {\r\n                    vs_currency: 'usd',\r\n                    ids: coinStorage.join(\",\")\r\n                }\r\n            });\r\n            setCoins(response.data);\r\n            setIsLoading(false);\r\n\r\n        }\r\n\r\n        if (coinStorage.length > 0) {\r\n            fetchData();\r\n        } else {\r\n            setCoins([]);\r\n        }\r\n\r\n    }, [coinStorage]);\r\n\r\n    const renderCoins = () => {\r\n        if(isLoading) {\r\n            return <div><i className=\"fas fa-coins\"></i> Your coins are loading...</div>;\r\n        } else if (coins.length === 0) {\r\n            return <div><i className=\"fas fa-coins\"></i> Add a coin to the list...</div>;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"coinlist list-group\">\r\n                {coins.map((coin) => {\r\n                    return <Coin key={coin.id} coin={coin} deleteCoin={deleteCoin}/>;\r\n                })}               \r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderCoins()}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CoinList;","import React from 'react';\r\nimport AddCoinButton from '../components/addCoinButton.js';\r\nimport CoinList from '../components/coinList.js';\r\n\r\nconst CoinSummary = () => {\r\n    const coins = [\r\n        \"bitcoin\",\r\n        \"ethereum\",\r\n        \"ripple\",\r\n        \"dash\",\r\n        \"neo\",\r\n        \"tron\",\r\n        \"bitcoin-cash\",\r\n        \"litecoin\",\r\n        \"ardor\",\r\n        \"eos\",\r\n        \"okb\",\r\n        \"tezos\",\r\n        \"cardano\",\r\n        \"hyperion\",\r\n        \"tether\"\r\n      ];\r\n\r\n    return (\r\n        <div className=\"coinsummary shadow border rounded bg-light\">\r\n            <AddCoinButton coins={coins}/>\r\n            <CoinList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinSummary;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header> \r\n            <div className=\"container clearfix\"> \r\n                <h4 id=\"logo\"><i className=\"fas fa-coins\"></i> CryptoTracks </h4>  \r\n            </div> \r\n       </header>\r\n    )\r\n}\r\n\r\nexport default Header;","// Sorts based on 24h prices using mergesort\r\nexport const mergeSortPrices = (arr) => {\r\n    console.log(mergeSort(arr))\r\n    return mergeSort(arr);\r\n}\r\n\r\nfunction merge(arr1, arr2) {\r\n    let sorted = [];\r\n\r\n    while (arr1.length !== 0 && arr2.length !== 0) {\r\n        if (arr1[0]['current_price'] > arr2[0]['current_price']) {sorted.push(arr1.shift())}\r\n        else {sorted.push(arr2.shift())}\r\n    }\r\n\r\n    return sorted.concat(arr1).concat(arr2);\r\n}\r\n\r\nfunction mergeSort(arr) {\r\n    let midPoint = arr.length / 2;\r\n    let firstHalf = arr.slice(0, midPoint);\r\n    let secondHalf = arr.slice(midPoint, arr.length);\r\n\r\n    if (arr.length < 2) {\r\n        return arr;\r\n    } else {\r\n        return merge(mergeSort(firstHalf), mergeSort(secondHalf));\r\n    }\r\n}\r\n\r\n\r\n// Sorts based on market capitalization using insertion sort\r\nexport const insertionSortMarketCap = (arr) => {\r\n    let newMax;\r\n    let sorted = [];\r\n    while (arr.length !== 0) {\r\n      newMax = maxAndRemove(arr);\r\n      sorted.push(newMax);\r\n    }\r\n    return sorted;\r\n}\r\n\r\nfunction maxAndRemove(arr) {\r\n    let max = arr[0];\r\n    let maxIndex = 0;\r\n    for (let i = 1; i < arr.length; i++) {\r\n      if (arr[i]['market_cap_rank'] < max['market_cap_rank']) {\r\n        max = arr[i];\r\n        maxIndex = i;\r\n      }\r\n    }\r\n    arr.splice(maxIndex, 1);\r\n    return max;\r\n  }\r\n\r\n// Sorts based on 24H price high using bubble sort\r\nexport const bubbleSort24HourHigh = (arr) => {\r\n    for (let i = arr.length; i > 0; i--) {\r\n        for (let x = 0; x < i-1; x++) {\r\n            if(arr[x][\"high_24h\"] > arr[x+1][\"high_24h\"]) {\r\n                swap(arr, x, x+1);\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction swap(arr, i1, i2) {\r\n    let temp = arr[i1];\r\n    arr[i1] = arr[i2];\r\n    arr[i2] = temp;\r\n}\r\n\r\n//Sorts based on 24H volume using selection sort\r\nexport const selectionSort24HourVolume = (arr) => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let lowest = i;\r\n        for (let x = i+1; x < arr.length; x++) {\r\n            if(arr[lowest][\"total_volume\"] > arr[x][\"total_volume\"]) {\r\n                lowest = x;   \r\n            }\r\n        }\r\n        if (i !== lowest) {\r\n            let temp = arr[i];\r\n            arr[i] = arr[lowest];\r\n            arr[lowest] = temp;\r\n        }\r\n    }\r\n    return arr;\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport Chartjs from 'chart.js';\r\nimport coinGecko from '../apis/coinGecko.js';\r\nimport {decideSort} from '../helpers/updateCompareCanvas.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { compareChartOptions } from '../configs/chartConfig';\r\n\r\n\r\nconst CompareCoins = () => {\r\n  \r\n    const chartRef = useRef();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [coinsToCompare, setCoinsToCompare] = useState(false);\r\n    const [sortCondition, setSortCondition] = useState(\"current_price\");\r\n    const [sortSize, setSortSize] = useState(5);\r\n    const [currentChart, setCurrentChart] = useState(\"current_price\");\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            const response = await coinGecko.get('/coins/markets', {\r\n                params: {\r\n                    vs_currency: 'usd',\r\n                    ids: \"\"\r\n                }\r\n            });\r\n            setCoinsToCompare(response.data);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        if (!coinsToCompare) {\r\n          fetchData();\r\n        }\r\n        \r\n        if (coinsToCompare) {\r\n          let sorted = decideSort(coinsToCompare, sortCondition, sortSize);\r\n          \r\n            const chart = new Chartjs(chartRef.current, {\r\n                type: 'bar',\r\n                data: {\r\n                  labels: sorted.map(c => c.name),\r\n                    datasets: [{\r\n                        label: sortCondition[0].toUpperCase() + sortCondition.replace(/_/g, \" \").slice(1),\r\n                        data: sorted.map(c => c[sortCondition]), \r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.5)',\r\n                            'rgba(54, 162, 235, 0.5)',\r\n                            'rgba(255, 206, 86, 0.5)',\r\n                            'rgba(75, 192, 192, 0.5)',\r\n                            'rgba(153, 102, 255, 0.5)',\r\n                            'rgba(255, 99, 132, 0.5)',\r\n                            'rgba(54, 162, 235, 0.5)',\r\n                            'rgba(255, 206, 86, 0.5)',\r\n                            'rgba(75, 192, 192, 0.5)',\r\n                            'rgba(153, 102, 255, 0.5)'\r\n                        ]\r\n                    }],\r\n                },\r\n                options: {\r\n                  ...compareChartOptions\r\n                }\r\n            })\r\n            setCurrentChart(chart);  \r\n        }\r\n      }, [coinsToCompare]);\r\n\r\n      const handleSortClick = (e) => {\r\n        currentChart.destroy();\r\n        setCoinsToCompare(false);\r\n        setSortCondition(e.target.id);\r\n      }\r\n\r\n      const handleSizeClick = (e) => {\r\n        currentChart.destroy();\r\n        setCoinsToCompare(false);\r\n        setSortSize(parseInt(e.target.id));\r\n      }\r\n\r\n      return (\r\n        <div className=\"bg-white border rounded p-3 chartDiv\">\r\n\r\n          <div id=\"canvas-div\">\r\n            <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\r\n          </div>\r\n\r\n          <div className=\"compare-container\">\r\n\r\n            <div className=\"chart-button mt-1 sort-buttons\">\r\n              <button\r\n                onClick={handleSortClick}\r\n                className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n                id=\"current_price\"\r\n              >\r\n                Current price\r\n              </button>\r\n              <button\r\n                onClick={handleSortClick}\r\n                className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n                id=\"market_cap\"\r\n              >\r\n                Market capitalization\r\n              </button>\r\n              <button\r\n                onClick={handleSortClick}\r\n                className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n                id=\"total_volume\"\r\n              >\r\n                24H Volume\r\n              </button>\r\n              <button\r\n                onClick={handleSortClick}\r\n                className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n                id=\"high_24h\"\r\n              >\r\n                24H High\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"chart-button mt-1\">\r\n              <button\r\n                onClick={handleSizeClick}\r\n                className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n                id=\"5\"\r\n              >\r\n                Top 5\r\n              </button>\r\n              <button\r\n                onClick={handleSizeClick}\r\n                className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n                id=\"10\"\r\n              >\r\n                Top 10\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"chart-button mt-1\">\r\n              <Link to=\"/\" className=\"btn btn-outline-secondary btn-sm\">\r\n                ← Back\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default CompareCoins;","import {mergeSortPrices, insertionSortMarketCap, bubbleSort24HourHigh, selectionSort24HourVolume} from './sorting.js';\r\n\r\nexport const decideSort = (arr, condition = null, sortSize) => {\r\n    if (condition === \"current_price\" || !condition) {\r\n        return mergeSortPrices(arr).slice(0,sortSize);\r\n    }\r\n    else if (condition === \"market_cap\") {\r\n        return insertionSortMarketCap(arr).slice(0,sortSize);\r\n    } \r\n    else if (condition === \"high_24h\") {\r\n        return bubbleSort24HourHigh(arr).slice(-sortSize).reverse();\r\n    } \r\n    else if (condition === \"total_volume\") {\r\n        return selectionSort24HourVolume(arr).slice(0,sortSize).reverse();\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport CoinDetails from './containers/coinDetails.js';\r\nimport CoinSummary from './containers/coinSummary.js';\r\nimport './App.css';\r\nimport Header from './components/header.js';\r\nimport { CoinStorageContextProvider } from './context/coinStorage.js';\r\nimport CompareCoins from './components/compareCoins.js';\r\n\r\n\r\nconst App = () => {\r\n    return(\r\n        <div className=\"container\">\r\n            <CoinStorageContextProvider>\r\n                <Router>\r\n                    <Header />\r\n                    <Route exact path=\"/\" component={CoinSummary}/>\r\n                    <Route exact path=\"/coins/:id\" component={CoinDetails}/>\r\n                    <Route exact path=\"/coins/compare\" component={CompareCoins}/>\r\n                </Router>\r\n            </CoinStorageContextProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}